{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Form/Form.module.css","components/Container/Container.module.css","services/contactApi.js","redux/Phonebook/phonebook-operation.js","redux/Phonebook/selectors.js","components/Form/Form.js","redux/Phonebook/phonebook-actions.js","components/Filter/Filter.js","components/Loader/Loader.js","components/ContactList/ContactList.js","components/Container/Container.js","App.js","redux/Phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsAPI","a","axios","get","data","addContactAPI","item","post","deleteContactsAPI","id","delete","defaults","baseURL","fetchContacts","createAsyncThunk","contacts","addContact","result","deleteContact","getContacts","state","contactItems","getLoading","loadingProcess","connect","dispatch","onSubmit","name","number","useState","userName","setName","setNumber","active","useDispatch","useSelector","handleChange","e","target","value","console","warn","reset","preventDefault","newContacts","shortid","generate","find","contact","alert","type","pattern","required","onChange","placeholder","className","s","button","disabled","changeFilter","createAction","filter","style","input__field","currentTarget","Loader","styles","spin","size","getFilteredContacts","allContacts","normalizedFilter","toLowerCase","includes","fetchContactsAll","isLoading","useEffect","map","onClick","Container","children","container","App","createReducer","fulfilled","_","payload","pending","rejected","combineReducers","store","configureStore","reducer","phonebookReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c69d6da0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__2BdaT\",\"button\":\"ContactList_button__2hYSo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Form_button__3VazH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3dI2z\"};","\r\nimport axios from 'axios';\r\n\r\n// axios.defaults.baseURL = '61a78099387ab200171d2d46.mockapi.io/api/v1';\r\n\r\nexport async function fetchContactsAPI() {\r\n    const { data } = await axios.get(`/contacts`);\r\n    return data;\r\n}\r\n\r\nexport async function addContactAPI(item) {\r\n    const { data } = await axios.post(`/contacts`, item);\r\n    return data;\r\n}\r\nexport async function deleteContactsAPI(id) {\r\n    const { data } = await axios.delete(`/contacts/${id}`);\r\n    return data;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport {\r\n    fetchContactsAPI,\r\n    addContactAPI,\r\n    deleteContactsAPI,\r\n} from '../../services/contactApi';\r\n\r\naxios.defaults.baseURL = 'https://61a78099387ab200171d2d46.mockapi.io/api/v1';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n    'contacts/fetchContacts',\r\n    async () => {\r\n        const contacts = await fetchContactsAPI();\r\n        return contacts;\r\n    },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n    'contacts/addContact',\r\n    async result => {\r\n        const contacts = await addContactAPI(result);\r\n        return contacts;\r\n    },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n    'contacts/deleteContact',\r\n    async id => {\r\n        await deleteContactsAPI(id);\r\n        return id;\r\n    },\r\n);","\r\nexport const getContacts = (state) => state.contacts.contactItems;\r\nexport const getLoading = state => state.contacts.loadingProcess;\r\n\r\nexport const getFilter = (state) => state.filter;\r\n","import { useState } from \"react\";\r\nimport { useDispatch, connect, useSelector } from \"react-redux\";\r\nimport { addContact } from \"../../redux/Phonebook/phonebook-operation\";\r\nimport s from \"./Form.module.css\";\r\nimport shortid from \"shortid\";\r\n\r\nimport { getContacts } from \"../../redux/Phonebook/selectors\";\r\n\r\n\r\nfunction Form() {\r\n\r\n    const [userName, setName] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\");\r\n    const [active] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(getContacts);\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        switch (name) {\r\n            case \"name\":\r\n                setName(value);\r\n                break;\r\n            case \"number\":\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                console.warn(`Field - ${name} is under constraction`);\r\n                return\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newContacts = {\r\n            name: userName,\r\n            number: number,\r\n            id: shortid.generate(),\r\n        };\r\n        if (contacts.find((contact) => contact.name === userName)) {\r\n            alert(`Sorry, ${userName} is already in yours contacts list`);\r\n\r\n            reset();\r\n            return\r\n        }\r\n\r\n\r\n        dispatch(addContact(newContacts));\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setName(\"\");\r\n        setNumber(\"\");\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label >\r\n                <p>Name:</p>\r\n                <input\r\n                    type=\"text\"\r\n                    id={shortid.generate()}\r\n                    name=\"name\"\r\n                    value={userName}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    placeholder=\"Rosie Simpson\"\r\n                />\r\n            </label>\r\n\r\n            <label >\r\n                <p>Number:</p>\r\n                <input\r\n                    type=\"tel\"\r\n                    id={shortid.generate()}\r\n                    name=\"number\"\r\n                    value={number}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    placeholder=\"459-12-56\"\r\n                />\r\n            </label>\r\n            <button className={s.button} type=\"submit\" disabled={active}>\r\n                Add contact\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\n\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\n\r\n\r\n\r\nexport const deleteContactRequest = createAction(\r\n    'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n    'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\n\r\n\r\n\r\nexport const changeFilter = createAction('phonebook/changeFilter');","\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/Phonebook/phonebook-actions';\r\nimport style from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, changeFilter }) => {\r\n    return (\r\n        <label>\r\n            Find contacts by name:\r\n            <input\r\n                className={style.input__field}\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={filter}\r\n                onChange={e => changeFilter(e.currentTarget.value)}\r\n            />\r\n        </label>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { filter } }) => ({ filter: filter });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeFilter: value => dispatch(changeFilter(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n\r\n\r\n\r\n\r\n","import { ImSpinner } from \"react-icons/im\";\r\nimport styles from \"./Loader.module.css\";\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <div className=\"spinner\">\r\n            <div className={styles.spin}>\r\n                <ImSpinner size=\"32\" className=\"icon-spin\" />\r\n                Loading...\r\n            </div>\r\n        </div>\r\n    );\r\n}","\r\nimport s from './ContactList.module.css'\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport {\r\n    deleteContact,\r\n    fetchContacts,\r\n} from '../../redux/Phonebook/phonebook-operation';\r\nimport Loader from \"../Loader/Loader\";\r\nimport {\r\n    getLoading\r\n} from '../../redux/Phonebook/selectors';\r\n\r\nconst ContactList = ({ contacts, deleteContact, fetchContactsAll }) => {\r\n    const isLoading = useSelector(getLoading);\r\n\r\n    useEffect(() => {\r\n        fetchContactsAll();\r\n    }, [fetchContactsAll]);\r\n\r\n    return (\r\n        <>\r\n            <ul >\r\n                {isLoading && <Loader />}\r\n                {contacts.map(({ id, name, number }) => (\r\n                    <li key={id} className={s.item}>\r\n                        <div><p>{name}</p>\r\n                            <p>{number}</p></div>\r\n                        <div><button\r\n                            className={s.button}\r\n                            type=\"button\"\r\n                            onClick={() => deleteContact(id)}\r\n                        >\r\n                            Delete contact\r\n                        </button></div>\r\n\r\n\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter((contact) =>\r\n        contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({\r\n    contacts: { contactItems, filter } }) => ({\r\n        contacts: getFilteredContacts(contactItems, filter),\r\n    });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    deleteContact: id => dispatch(deleteContact(id)),\r\n    fetchContactsAll: () => dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import PropTypes from 'prop-types';\r\n// import Contact from '../Contact';\r\n\r\n// export default function ContactList({ getVisibleContacts, deleteContact }) {\r\n//     return (\r\n//         <ul>\r\n//             {getVisibleContacts().map(contact => (\r\n//                 <Contact key={contact.id}\r\n//                     contact={contact}\r\n//                     deleteContact={deleteContact} />\r\n//             ))}\r\n//         </ul>\r\n//     );\r\n// }\r\n\r\n// ContactList.propTypes = {\r\n//     getVisibleContacts: PropTypes.func,\r\n//     deleteContact: PropTypes.func,\r\n// };","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n    return <div className={s.container}> {children} </div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.any,\r\n};","import Form from './components/Form';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport Container from './components/Container/Container';\n\n\nexport default function App() {\n  return (\n    <Container>\n      <div>\n        <h1>Phonebook</h1>\n        <Form />\n        <h2>Contacts:</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </Container>\n  );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n// import { Component } from 'react';\n\n// import shortid from 'shortid';\n// import s from './App.module.css';\n// import Form from './components/Form';\n// import Filter from './components/Filter';\n// import ContactList from './components/ContactList';\n// import Container from './components/Container';\n\n// class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filter: '',\n//   };\n\n//   getFormData = data => {\n//     if (\n//       this.state.contacts.some(contact => contact.name.toLowerCase() === data.name.toLowerCase())\n//     ) {\n//       alert(`You have already had ${data.name} in your contacts!`);\n//       return;\n//     }\n//     const contact = {\n//       id: shortid.generate(),\n//       name: data.name,\n//       number: data.number,\n//     };\n\n//     this.setState(({ contacts }) => ({\n//       contacts: [contact, ...contacts],\n//     }));\n//   };\n\n//   handleInputChange = event => {\n//     const { name, value } = event.currentTarget;\n//     this.setState({ [name]: value });\n//   };\n\n//   getVisibleContacts = () => {\n//     const { contacts } = this.state;\n//     const normalizedFilter = this.state.filter.toLowerCase();\n//     const visibleContacts = contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter),\n//     );\n\n//     return visibleContacts;\n//   };\n\n//   deleteContact = id => {\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(contact => contact.id !== id),\n//     }));\n//   };\n\n//   componentDidMount() {\n//     const localContact = localStorage.getItem('contacts');\n\n//     const parsedContacts = JSON.parse(localContact)\n\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts })\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n//     }\n//   }\n\n\n//   render() {\n//     const { filter, contacts } = this.state;\n//     const { getFormData, handleInputChange, getVisibleContacts, deleteContact } = this;\n\n//     return (\n//       <Container>\n//         <h1>Phonebook</h1>\n//         <Form getFormData={getFormData} />\n//         <h2 className={s.contactsTitle}>Contacts</h2>\n//         <Filter value={filter} onChange={handleInputChange} />\n//         <ContactList\n//           contacts={contacts}\n//           getVisibleContacts={getVisibleContacts}\n//           deleteContact={deleteContact}\n//         />\n//       </Container>\n//     );\n//   }\n// }\n\n// export default App;","\r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { changeFilter } from './phonebook-actions';\r\nimport {\r\n    fetchContacts,\r\n    deleteContact,\r\n    addContact,\r\n} from '../Phonebook/phonebook-operation';\r\n\r\nexport const contactItems = createReducer([], {\r\n    [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n    [addContact.fulfilled]: (state, { payload }) => {\r\n        return [payload, ...state];\r\n    },\r\n    [deleteContact.fulfilled]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const loadingProcess = createReducer(false, {\r\n    [fetchContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => false,\r\n    [fetchContacts.rejected]: () => false,\r\n    [addContact.pending]: () => true,\r\n    [addContact.fulfilled]: () => false,\r\n    [addContact.rejected]: () => false,\r\n    [deleteContact.pending]: () => true,\r\n    [deleteContact.fulfilled]: () => false,\r\n    [deleteContact.rejected]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n    contactItems,\r\n    filter,\r\n    loadingProcess,\r\n});\r\n\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport phonebookReducer from './Phonebook/phonebook-reducer';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: phonebookReducer,\r\n    },\r\n});\r\n\r\nexport default store;\r\n\r\n\r\n","\nimport React from \"react\";\nimport { Provider } from 'react-redux';\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <PersistGate persistor={persistor} loading={null}> */}\n    <Provider store={store}>\n      <App />\n    </Provider>\n    {/* </PersistGate> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <PersistGate persistor={persistor} loading={null}>\n//       <Provider store={store}>\n//         <App />\n//       </Provider>\n//     </PersistGate>\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );"],"sourceRoot":""}