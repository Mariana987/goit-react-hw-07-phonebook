{"version":3,"sources":["components/Contact/Contact.module.css","components/Form/Form.module.css","components/Container/Container.module.css","redux/Phonebook/phonebook-actions.js","components/Form/Form.js","components/Filter/Filter.js","components/Contact/Contact.js","redux/Phonebook/selectors.js","components/ContactList/ContactList.js","components/Container/Container.js","App.js","redux/Phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","deleteContact","Filter","ContactForm","useState","name","setName","number","setNumber","active","dispatch","useDispatch","handleChange","e","target","value","console","warn","resetForm","onSubmit","preventDefault","cont","id","shortid","generate","type","pattern","required","onChange","placeholder","className","s","button","disabled","FilterContacts","filter","setFilter","c","ContactItem","item","onClick","getContacts","state","contacts","getFilter","ContactList","useSelector","normalizedFilter","toLowerCase","contact","includes","getFilteredContacts","map","Container","children","container","App","contactsList","createReducer","payload","some","alert","contactsFilter","_","persistConfig","key","version","storage","blacklist","phoneBookReducer","combineReducers","persistPhoneBookReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0bfcc9de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__c8ilO\",\"button\":\"Contact_button__3ZBeU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Form_button__3VazH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3dI2z\"};","// import types from \"./phonebook-types\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"contacts/Add\");\r\nexport const deleteContact = createAction(\"contacts/Delete\");\r\nexport const Filter = createAction(\"contacts/Filter\");\r\n\r\n// export const addContact = (cont) => ({\r\n//   type: types.ADD,\r\n//   payload: cont,\r\n// });\r\n\r\n// export const deleteContact = (contactId) => ({\r\n//   type: types.DELETE,\r\n//   payload: contactId,\r\n// });\r\n// export const Filter = (value) => ({\r\n//   type: types.FILTER,\r\n//   payload: value,\r\n// });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import types from \"./phonebook-types\";\r\n// export const addContact = (cont) => ({\r\n//     type: types.ADD,\r\n//     payload: cont,\r\n// });\r\n\r\n// export const deleteContact = (contactId) => ({\r\n//     type: types.DELETE,\r\n//     payload: contactId,\r\n// });\r\n// export const changeFilter = (value) => ({\r\n//     type: types.FILTER,\r\n//     payload: value,\r\n// });","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addContact } from \"../../redux/Phonebook/phonebook-actions\";\r\nimport s from \"./Form.module.css\";\r\nimport shortid from \"shortid\";\r\n\r\nexport default function ContactForm() {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\");\r\n    const [active] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        switch (name) {\r\n            case \"name\":\r\n                setName(value);\r\n                break;\r\n            case \"number\":\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                console.warn(`Field - ${name} is under constraction`);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const cont = {\r\n            name: name,\r\n            number: number,\r\n            id: shortid.generate(),\r\n        };\r\n        dispatch(addContact(cont));\r\n        resetForm();\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setName(\"\");\r\n        setNumber(\"\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label >\r\n                <p>Name:</p>\r\n                <input\r\n                    type=\"text\"\r\n                    id={shortid.generate()}\r\n                    name=\"name\"\r\n                    value={name}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    placeholder=\"Rosie Simpson\"\r\n                />\r\n            </label>\r\n\r\n            <label >\r\n                <p>Number:</p>\r\n                <input\r\n                    type=\"tel\"\r\n                    id={shortid.generate()}\r\n                    name=\"number\"\r\n                    value={number}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    placeholder=\"459-12-56\"\r\n                />\r\n            </label>\r\n            <button className={s.button} type=\"submit\" disabled={active}>\r\n                Add contact\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\n// import PropTypes from 'prop-types';\r\n// import { Component } from 'react';\r\n// import s from './Form.module.css';\r\n// import { useState } from \"react\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { addContact } from \"../../redux/Phonebook/phonebook-actions\";\r\n\r\n// class Form extends Component {\r\n//     state = {\r\n//         name: '',\r\n//         number: '',\r\n//     };\r\n\r\n//     handleInputChange = event => {\r\n//         const { name, value } = event.currentTarget;\r\n//         this.setState({ [name]: value });\r\n//     };\r\n\r\n//     handleSubmite = event => {\r\n//         event.preventDefault();\r\n//         this.props.getFormData(this.state);\r\n//         this.reset();\r\n//     };\r\n\r\n//     reset = () => {\r\n//         this.setState({\r\n//             name: '',\r\n//             number: '',\r\n//         });\r\n//     };\r\n\r\n//     render() {\r\n//         const { name, number } = this.state;\r\n//         const { handleInputChange, handleSubmite } = this;\r\n//         return (\r\n//             <>\r\n//                 <form onSubmit={handleSubmite}>\r\n//                     <label>\r\n//                         <p>Name</p>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             value={name}\r\n//                             name=\"name\"\r\n//                             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//                             required\r\n//                             onChange={handleInputChange}\r\n//                         />\r\n//                     </label>\r\n//                     <label>\r\n//                         <p>Number</p>\r\n//                         <input\r\n//                             type=\"tel\"\r\n//                             value={number}\r\n//                             name=\"number\"\r\n//                             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//                             onChange={handleInputChange}\r\n//                             required\r\n//                         />\r\n//                     </label>\r\n//                     <button type=\"submit\" className={s.button}>\r\n//                         Add contact\r\n//                     </button>\r\n//                 </form>\r\n//             </>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Form;\r\n\r\n// Form.propTypes = {\r\n//     getFormData: PropTypes.func,\r\n// };","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Filter } from \"../../redux/Phonebook/phonebook-actions\";\r\n\r\nexport default function FilterContacts() {\r\n    const dispatch = useDispatch();\r\n    const [filter, setFilter] = useState(\"\");\r\n    const onFilterChange = (e) => {\r\n        setFilter(e.target.value);\r\n        dispatch(Filter(e.target.value));\r\n    };\r\n\r\n    return (\r\n        <div c>\r\n            Find contacts by name:\r\n            <input\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={filter}\r\n                onChange={onFilterChange}\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/Phonebook/phonebook-actions\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Contact.module.css\";\r\n\r\nexport default function ContactItem({ name, number, id }) {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <li id={id} className={s.item}>\r\n            <p >{name}: </p>\r\n            <p > {number}</p>\r\n            <button\r\n                onClick={() => dispatch(deleteContact(id))}\r\n                className={s.button} >\r\n                Delete contact\r\n            </button>\r\n        </li>\r\n    );\r\n}\r\n\r\nContactItem.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n};\r\n\r\n\r\n\r\n// import PropTypes from 'prop-types';\r\n// import s from './Contact.module.css';\r\n\r\n// export default function Contact({ contact, deleteContact }) {\r\n//     return (\r\n//         <li className={s.item}>\r\n//             {contact.name}: {contact.number}{' '}\r\n//             <button onClick={() => deleteContact(contact.id)} className={s.button}>Delete</button>\r\n//         </li>\r\n//     );\r\n// }\r\n\r\n// Contact.propTypes = {\r\n//     concact: PropTypes.string,\r\n//     deleteContact: PropTypes.func,\r\n// };","export const getContacts = (state) => state.contacts;\r\nexport const getFilter = (state) => state.filter;","import React from \"react\";\r\nimport ContactItem from \"../Contact\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getContacts, getFilter } from \"../../redux/Phonebook/selectors\";\r\n\r\nexport default function ContactList() {\r\n    const contacts = useSelector(getContacts);\r\n    const filter = useSelector(getFilter);\r\n\r\n    const getFilteredContacts = () => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        return contacts.filter((contact) =>\r\n            contact.name.toLowerCase().includes(normalizedFilter)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <ul >\r\n            {getFilteredContacts().map(({ name, number, id }) => (\r\n                <ContactItem key={id} name={name} number={number} id={id} />\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// import PropTypes from 'prop-types';\r\n// import Contact from '../Contact';\r\n\r\n// export default function ContactList({ getVisibleContacts, deleteContact }) {\r\n//     return (\r\n//         <ul>\r\n//             {getVisibleContacts().map(contact => (\r\n//                 <Contact key={contact.id}\r\n//                     contact={contact}\r\n//                     deleteContact={deleteContact} />\r\n//             ))}\r\n//         </ul>\r\n//     );\r\n// }\r\n\r\n// ContactList.propTypes = {\r\n//     getVisibleContacts: PropTypes.func,\r\n//     deleteContact: PropTypes.func,\r\n// };","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n    return <div className={s.container}> {children} </div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.any,\r\n};","import Form from './components/Form';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport Container from './components/Container/Container';\n\n\nexport default function App() {\n  return (\n    <Container>\n      <div>\n        <h1>Phonebook</h1>\n        <Form />\n        <h2>Contacts:</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </Container>\n  );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n// import { Component } from 'react';\n\n// import shortid from 'shortid';\n// import s from './App.module.css';\n// import Form from './components/Form';\n// import Filter from './components/Filter';\n// import ContactList from './components/ContactList';\n// import Container from './components/Container';\n\n// class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filter: '',\n//   };\n\n//   getFormData = data => {\n//     if (\n//       this.state.contacts.some(contact => contact.name.toLowerCase() === data.name.toLowerCase())\n//     ) {\n//       alert(`You have already had ${data.name} in your contacts!`);\n//       return;\n//     }\n//     const contact = {\n//       id: shortid.generate(),\n//       name: data.name,\n//       number: data.number,\n//     };\n\n//     this.setState(({ contacts }) => ({\n//       contacts: [contact, ...contacts],\n//     }));\n//   };\n\n//   handleInputChange = event => {\n//     const { name, value } = event.currentTarget;\n//     this.setState({ [name]: value });\n//   };\n\n//   getVisibleContacts = () => {\n//     const { contacts } = this.state;\n//     const normalizedFilter = this.state.filter.toLowerCase();\n//     const visibleContacts = contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter),\n//     );\n\n//     return visibleContacts;\n//   };\n\n//   deleteContact = id => {\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(contact => contact.id !== id),\n//     }));\n//   };\n\n//   componentDidMount() {\n//     const localContact = localStorage.getItem('contacts');\n\n//     const parsedContacts = JSON.parse(localContact)\n\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts })\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n//     }\n//   }\n\n\n//   render() {\n//     const { filter, contacts } = this.state;\n//     const { getFormData, handleInputChange, getVisibleContacts, deleteContact } = this;\n\n//     return (\n//       <Container>\n//         <h1>Phonebook</h1>\n//         <Form getFormData={getFormData} />\n//         <h2 className={s.contactsTitle}>Contacts</h2>\n//         <Filter value={filter} onChange={handleInputChange} />\n//         <ContactList\n//           contacts={contacts}\n//           getVisibleContacts={getVisibleContacts}\n//           deleteContact={deleteContact}\n//         />\n//       </Container>\n//     );\n//   }\n// }\n\n// export default App;","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, Filter } from \"./phonebook-actions\";\r\n\r\nexport const contactsList = createReducer([], {\r\n    [addContact]: (state, { payload }) => {\r\n        if (state.some(({ name }) => name === payload.name)) {\r\n            alert(`Sorry, contact is already in your contacts list`);\r\n            return state;\r\n        }\r\n        return [...state, payload];\r\n    },\r\n    [deleteContact]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nexport const contactsFilter = createReducer(\"\", {\r\n    [Filter]: (_, { payload }) => payload,\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { combineReducers } from \"redux\";\r\n// import types from \"./phonebook-types\";\r\n\r\n// const contacts = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       if (state.some(({ name }) => name === payload.name)) {\r\n//         alert(`Sorry, contact is already in your contacts list`);\r\n//         return state;\r\n//       }\r\n//       return [...state, payload];\r\n\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTER:\r\n//       return (state = payload.target.value);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default combineReducers({\r\n//   contacts,\r\n//   filter,\r\n// });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport { combineReducers } from \"redux\";\r\nimport { contactsFilter, contactsList } from \"./Phonebook/phonebook-reducer\";\r\nimport logger from \"redux-logger\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n    key: \"products\",\r\n    version: 1,\r\n    storage,\r\n    blacklist: [\"filter\"],\r\n};\r\n\r\nconst phoneBookReducer = combineReducers({\r\n    contacts: contactsList,\r\n    filter: contactsFilter,\r\n});\r\n\r\nconst persistPhoneBookReducer = persistReducer(persistConfig, phoneBookReducer);\r\n\r\nexport const store = configureStore({\r\n    reducer: persistPhoneBookReducer,\r\n    devTools: process.env.NODE_ENV === \"development\",\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n            },\r\n        }).concat(logger),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n// const rootReducer = combineReducers({\r\n//   phonebookContacts: contactsReducer,\r\n// });\r\n// const store = createStore(rootReducer, composeWithDevTools());","\nimport React from \"react\";\nimport { Provider } from 'react-redux';\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate persistor={persistor} loading={null}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}